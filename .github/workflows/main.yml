name: release
on:
  push:
    tags:
      - "v*.*.*"
jobs:
  build:
    name: build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        build: [linux, macos, windows]
        include:
          - build: linux
            os: ubuntu-latest
            rust: nightly
            target: x86_64-unknown-linux-musl
            archive-name: lsp-copilot-linux.tar.gz
          - build: macos
            os: macos-latest
            rust: nightly
            target: x86_64-apple-darwin
            archive-name: lsp-copilot-macos.tar.gz
          - build: windows
            os: windows-latest
            rust: nightly-x86_64-msvc
            target: x86_64-pc-windows-msvc
            archive-name: lsp-copilot-windows.7z
      fail-fast: false

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          profile: minimal
          override: true
          target: ${{ matrix.target }}

      - name: Build binary
        run: cargo build --verbose --release --target ${{ matrix.target }}
        env:
          RUST_BACKTRACE: 1

      - name: Strip binary (linux and macos)
        if: matrix.build == 'linux' || matrix.build == 'macos'
        run: strip "target/${{ matrix.target }}/release/lsp-copilot"

      - name: Build archive
        shell: bash
        run: |
          mkdir archive
          cp LICENSE README.org lsp-copilot.el archive/
          cd archive
          if [ "${{ matrix.build }}" = "windows" ]; then
            cp "../target/${{ matrix.target }}/release/lsp-copilot.exe" ./
            7z a "${{ matrix.archive-name }}" LICENSE README.org lsp-copilot.el lsp-copilot.exe
          else
            cp "../target/${{ matrix.target }}/release/lsp-copilot" ./
            tar -czf "${{ matrix.archive-name }}" LICENSE README.org lsp-copilot.el lsp-copilot
          fi
      - name: Upload archive
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.archive-name }}
          path: archive
  release:
      name: Release
      needs: build
      runs-on: ubuntu-latest

      steps:
        - name: Checkout repository
          uses: actions/checkout@v4

        - name: Download artifacts
          uses: actions/download-artifact@v4
          with:
            path: assets

        - name: Create GitHub Release
          uses: softprops/action-gh-release@v2
          if: startsWith(github.ref, 'refs/tags/')
          with:
            files: |
                   ./assets/lsp-copilot-linux.tar.gz/lsp-copilot-linux.tar.gz
                   ./assets/lsp-copilot-macos.tar.gz/lsp-copilot-macos.tar.gz
                   ./assets/lsp-copilot-windows.7z/lsp-copilot-windows.7z
            body: |
              Automated release for build artifacts.
            draft: false
            prerelease: false
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
